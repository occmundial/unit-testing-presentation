describe('[Funciones][Comunes]: Devolver las primeras 2 iniciales.', () => {
	//1. Enviar una frase con sólo 2 palabras.
	it('Debe devolver "FM" al enviar como parámetro "Fulanito McPruebas".', () => {
		expect(returnFirst2Initials('Fulanito McPruebas')).toEqual('FM');
	});
	//2. Enviar una frase con más de 2 palabras.
	it('Debe devolver "AP" al enviar como parámetro "Albus Percival Wulfric Brian Dumbledore".', () => {
		expect(returnFirst2Initials('Albus Percival Wulfric Brian Dumbledore')).toEqual('AP');
	});
	//3. Enviar una frase con 2 o más palabras y espaciado extra.
	it('Debe devolver "HM" al enviar como parámetro "   Hola   Mundo   ".', () => {
		expect(returnFirst2Initials('   Hola   Mundo   ')).toEqual('HM');
	});
	//4. Enviar una frase con 1 sóla palabra.
	it('Debe devolver "Z" al enviar como parámetro "Zero".', () => {
		expect(returnFirst2Initials('Zero')).toEqual('Z');
	});
	//5. Enviar una frase vacía.
	it('Debe devolver una cadena vacía al enviar como parámetro una cadena vacía.', () => {
		expect(returnFirst2Initials('')).toEqual('');
	});
	//6. Enviar una frase nula.
	it('Debe devolver una cadena vacía al enviar como parámetro una cadena vacía.', () => {
		expect(returnFirst2Initials(null)).toEqual('');
	});
	//7. Enviar una frase indefinida.
	it('Debe devolver una cadena vacía al enviar como parámetro una cadena vacía.', () => {
		expect(returnFirst2Initials(undefined)).toEqual('');
	});
	//8. Enviar números.
	it('Debe tratar el número como texto y devolver "1" al enviar 10000.', () => {
		expect(returnFirst2Initials(10000)).toEqual('1');
	});
})